function App() {
  const [turn0, setTurn0] = useState(true); // True for Player X's turn, false for Player O
  const [boxes, setBoxes] = useState(Array(9).fill("")); // Store the state of each box in the grid
  const [winner, setWinner] = useState(null); // Track the winner
  const [isDarkMode, setIsDarkMode] = useState(false); // State for dark mode

  // Function to reset the game
  const resetGame = () => {
    setBoxes(Array(9).fill("")); // Reset boxes
    setTurn0(true); // Set turn to Player X
    setWinner(null); // Reset winner
  };

  // Function to toggle dark mode
  const toggleDarkMode = () => {
    setIsDarkMode((prevMode) => {
      const newMode = !prevMode;
      if (newMode) {
        document.body.classList.add("dark-mode");
      } else {
        document.body.classList.remove("dark-mode");
      }
      return newMode;
    });
  };

  return (
    <div className="container">
      {/* Dark Mode Button */}
      <button id="dark-mode-btn" onClick={toggleDarkMode}>
        {isDarkMode ? "Light Mode" : "Dark Mode"}
      </button>

      {/* Header */}
      <h1>Tic-Tac-Toe</h1>
      <p>Challenge your friends in this ultimate strategy game!</p>

      {/* Game Board */}
      <GameBoard
        boxes={boxes}
        setBoxes={setBoxes}
        turn0={turn0}
        setTurn0={setTurn0}
        winner={winner}
        setWinner={setWinner}
      />

      {/* Display winner message if there is a winner */}
      {winner && <Message winner={winner} resetGame={resetGame} />}

      {/* Reset Button */}
      <button onClick={resetGame} className="control-btn">
        Reset Game
      </button>
    </div>
  );
}

export default App;
